//
//  PhoneNumberView.swift
//  poopedApp
//
//  Created by Danial Baizak on 30.06.2023.
//

import SwiftUI

import SwiftUI

struct PhoneNumberView: View {
    struct Country {
        let name: String
        let code: String
    }
    
    let countries = [
        Country(name: "ğŸ‡¦ğŸ‡«", code: "+93"),
        Country(name: "ğŸ‡¦ğŸ‡±", code: "+355"),
        Country(name: "ğŸ‡©ğŸ‡¿", code: "+213"),
        Country(name: "ğŸ‡¦ğŸ‡©", code: "+376"),
        Country(name: "ğŸ‡¦ğŸ‡´", code: "+244"),
        Country(name: "ğŸ‡¦ğŸ‡¬", code: "+1"),
        Country(name: "ğŸ‡¦ğŸ‡·", code: "+54"),
        Country(name: "ğŸ‡¦ğŸ‡²", code: "+374"),
        Country(name: "ğŸ‡¦ğŸ‡º", code: "+61"),
        Country(name: "ğŸ‡¦ğŸ‡¹", code: "+43"),
        Country(name: "ğŸ‡¦ğŸ‡¿", code: "+994"),
        Country(name: "ğŸ‡§ğŸ‡¸", code: "+1"),
        Country(name: "ğŸ‡§ğŸ‡­", code: "+973"),
        Country(name: "ğŸ‡§ğŸ‡©", code: "+880"),
        Country(name: "ğŸ‡§ğŸ‡§", code: "+1"),
        Country(name: "ğŸ‡§ğŸ‡¾", code: "+375"),
        Country(name: "ğŸ‡§ğŸ‡ª", code: "+32"),
        Country(name: "ğŸ‡§ğŸ‡¿", code: "+501"),
        Country(name: "ğŸ‡§ğŸ‡¯", code: "+229"),
        Country(name: "ğŸ‡§ğŸ‡¹", code: "+975"),
        Country(name: "ğŸ‡§ğŸ‡´", code: "+591"),
        Country(name: "ğŸ‡§ğŸ‡¦", code: "+387"),
        Country(name: "ğŸ‡§ğŸ‡¼", code: "+267"),
        Country(name: "ğŸ‡§ğŸ‡·", code: "+55"),
        Country(name: "ğŸ‡§ğŸ‡³", code: "+673"),
        Country(name: "ğŸ‡§ğŸ‡¬", code: "+359"),
        Country(name: "ğŸ‡§ğŸ‡«", code: "+226"),
        Country(name: "ğŸ‡§ğŸ‡®", code: "+257"),
        Country(name: "ğŸ‡°ğŸ‡­", code: "+855"),
        Country(name: "ğŸ‡¨ğŸ‡²", code: "+237"),
        Country(name: "ğŸ‡¨ğŸ‡¦", code: "+1"),
        Country(name: "ğŸ‡¨ğŸ‡»", code: "+238"),
        Country(name: "ğŸ‡¨ğŸ‡«", code: "+236"),
        Country(name: "ğŸ‡¹ğŸ‡©", code: "+235"),
        Country(name: "ğŸ‡¨ğŸ‡±", code: "+56"),
        Country(name: "ğŸ‡¨ğŸ‡³", code: "+86"),
        Country(name: "ğŸ‡¨ğŸ‡´", code: "+57"),
        Country(name: "ğŸ‡°ğŸ‡²", code: "+269"),
        Country(name: "ğŸ‡¨ğŸ‡¬", code: "+242"),
        Country(name: "ğŸ‡¨ğŸ‡·", code: "+506"),
        Country(name: "ğŸ‡­ğŸ‡·", code: "+385"),
        Country(name: "ğŸ‡¨ğŸ‡º", code: "+53"),
        Country(name: "ğŸ‡¨ğŸ‡º", code: "+53"),
        Country(name: "ğŸ‡¨ğŸ‡¾", code: "+357"),
        Country(name: "ğŸ‡¨ğŸ‡¿", code: "+420"),
        Country(name: "ğŸ‡¨ğŸ‡®", code: "+225"),
        Country(name: "ğŸ‡©ğŸ‡°", code: "+45"),
        Country(name: "ğŸ‡©ğŸ‡¯", code: "+253"),
        Country(name: "ğŸ‡©ğŸ‡²", code: "+1"),
        Country(name: "ğŸ‡©ğŸ‡´", code: "+1"),
        Country(name: "ğŸ‡ªğŸ‡¨", code: "+593"),
        Country(name: "ğŸ‡ªğŸ‡¬", code: "+20"),
        Country(name: "ğŸ‡¸ğŸ‡»", code: "+503"),
        Country(name: "ğŸ‡¬ğŸ‡¶", code: "+240"),
        Country(name: "ğŸ‡ªğŸ‡·", code: "+291"),
        Country(name: "ğŸ‡ªğŸ‡ª", code: "+372"),
        Country(name: "ğŸ‡ªğŸ‡¹", code: "+251"),
        Country(name: "ğŸ‡«ğŸ‡´", code: "+298"),
        Country(name: "ğŸ‡«ğŸ‡¯", code: "+679"),
        Country(name: "ğŸ‡«ğŸ‡®", code: "+358"),
        Country(name: "ğŸ‡«ğŸ‡·", code: "+33"),
        Country(name: "ğŸ‡¬ğŸ‡¦", code: "+241"),
        Country(name: "ğŸ‡¬ğŸ‡²", code: "+220"),
        Country(name: "ğŸ‡¬ğŸ‡ª", code: "+995"),
        Country(name: "ğŸ‡©ğŸ‡ª", code: "+49"),
        Country(name: "ğŸ‡¬ğŸ‡­", code: "+233"),
        Country(name: "ğŸ‡¬ğŸ‡·", code: "+30"),
        Country(name: "ğŸ‡¬ğŸ‡±", code: "+299"),
        Country(name: "ğŸ‡¬ğŸ‡©", code: "+1"),
        Country(name: "ğŸ‡¬ğŸ‡¹", code: "+502"),
        Country(name: "ğŸ‡¬ğŸ‡¼", code: "+245"),
        Country(name: "ğŸ‡¬ğŸ‡¾", code: "+592"),
        Country(name: "ğŸ‡­ğŸ‡¹", code: "+509"),
        Country(name: "ğŸ‡­ğŸ‡³", code: "+504"),
        Country(name: "ğŸ‡­ğŸ‡°", code: "+852"),
        Country(name: "ğŸ‡­ğŸ‡º", code: "+36"),
        Country(name: "ğŸ‡®ğŸ‡¸", code: "+354"),
        Country(name: "ğŸ‡®ğŸ‡³", code: "+91"),
        Country(name: "ğŸ‡®ğŸ‡©", code: "+62"),
        Country(name: "ğŸ‡®ğŸ‡·", code: "+98"),
        Country(name: "ğŸ‡®ğŸ‡¶", code: "+964"),
        Country(name: "ğŸ‡®ğŸ‡ª", code: "+353"),
        Country(name: "ğŸ‡®ğŸ‡±", code: "+972"),
        Country(name: "ğŸ‡®ğŸ‡¹", code: "+39"),
        Country(name: "ğŸ‡¯ğŸ‡²", code: "+1"),
        Country(name: "ğŸ‡¯ğŸ‡µ", code: "+81"),
        Country(name: "ğŸ‡¯ğŸ‡´", code: "+962"),
        Country(name: "ğŸ‡°ğŸ‡¿", code: "+7"),
        Country(name: "ğŸ‡°ğŸ‡ª", code: "+254"),
        Country(name: "ğŸ‡°ğŸ‡®", code: "+686"),
        Country(name: "ğŸ‡½ğŸ‡°", code: "+383"),
        Country(name: "ğŸ‡°ğŸ‡¼", code: "+965"),
        Country(name: "ğŸ‡°ğŸ‡¬", code: "+996"),
        Country(name: "ğŸ‡±ğŸ‡¦", code: "+856"),
        Country(name: "ğŸ‡±ğŸ‡»", code: "+371"),
        Country(name: "ğŸ‡±ğŸ‡§", code: "+961"),
        Country(name: "ğŸ‡±ğŸ‡¸", code: "+266"),
        Country(name: "ğŸ‡±ğŸ‡·", code: "+231"),
        Country(name: "ğŸ‡±ğŸ‡¾", code: "+218"),
        Country(name: "ğŸ‡±ğŸ‡®", code: "+423"),
        Country(name: "ğŸ‡±ğŸ‡¹", code: "+370"),
        Country(name: "ğŸ‡±ğŸ‡º", code: "+352"),
        Country(name: "ğŸ‡²ğŸ‡´", code: "+853"),
        Country(name: "ğŸ‡²ğŸ‡°", code: "+389"),
        Country(name: "ğŸ‡²ğŸ‡¬", code: "+261"),
        Country(name: "ğŸ‡²ğŸ‡¼", code: "+265"),
        Country(name: "ğŸ‡²ğŸ‡¾", code: "+60"),
        Country(name: "ğŸ‡²ğŸ‡»", code: "+960"),
        Country(name: "ğŸ‡²ğŸ‡±", code: "+223"),
        Country(name: "ğŸ‡²ğŸ‡¹", code: "+356"),
        Country(name: "ğŸ‡²ğŸ‡­", code: "+692"),
        Country(name: "ğŸ‡²ğŸ‡¶", code: "+596"),
        Country(name: "ğŸ‡²ğŸ‡·", code: "+222"),
        Country(name: "ğŸ‡²ğŸ‡º", code: "+230"),
        Country(name: "ğŸ‡²ğŸ‡½", code: "+52"),
        Country(name: "ğŸ‡«ğŸ‡²", code: "+691"),
        Country(name: "ğŸ‡²ğŸ‡©", code: "+373"),
        Country(name: "ğŸ‡²ğŸ‡¨", code: "+377"),
        Country(name: "ğŸ‡²ğŸ‡³", code: "+976"),
        Country(name: "ğŸ‡²ğŸ‡ª", code: "+382"),
        Country(name: "ğŸ‡²ğŸ‡¦", code: "+212"),
        Country(name: "ğŸ‡²ğŸ‡¿", code: "+258"),
        Country(name: "ğŸ‡²ğŸ‡²", code: "+95"),
        Country(name: "ğŸ‡³ğŸ‡¦", code: "+264"),
        Country(name: "ğŸ‡³ğŸ‡·", code: "+674"),
        Country(name: "ğŸ‡³ğŸ‡µ", code: "+977"),
        Country(name: "ğŸ‡³ğŸ‡±", code: "+31"),
        Country(name: "ğŸ‡³ğŸ‡¨", code: "+687"),
        Country(name: "ğŸ‡³ğŸ‡¿", code: "+64"),
        Country(name: "ğŸ‡³ğŸ‡®", code: "+505"),
        Country(name: "ğŸ‡³ğŸ‡ª", code: "+227"),
        Country(name: "ğŸ‡³ğŸ‡¬", code: "+234"),
        Country(name: "ğŸ‡³ğŸ‡º", code: "+683"),
        Country(name: "ğŸ‡°ğŸ‡µ", code: "+850"),
        Country(name: "ğŸ‡³ğŸ‡´", code: "+47"),
        Country(name: "ğŸ‡´ğŸ‡²", code: "+968"),
        Country(name: "ğŸ‡µğŸ‡°", code: "+92"),
        Country(name: "ğŸ‡µğŸ‡¼", code: "+680"),
        Country(name: "ğŸ‡µğŸ‡¸", code: "+970"),
        Country(name: "ğŸ‡µğŸ‡¦", code: "+507"),
        Country(name: "ğŸ‡µğŸ‡¬", code: "+675"),
        Country(name: "ğŸ‡µğŸ‡¾", code: "+595"),
        Country(name: "ğŸ‡µğŸ‡ª", code: "+51"),
        Country(name: "ğŸ‡µğŸ‡­", code: "+63"),
        Country(name: "ğŸ‡µğŸ‡³", code: "+64"),
        Country(name: "ğŸ‡µğŸ‡±", code: "+48"),
        Country(name: "ğŸ‡µğŸ‡¹", code: "+351"),
        Country(name: "ğŸ‡¶ğŸ‡¦", code: "+974"),
        Country(name: "ğŸ‡·ğŸ‡´", code: "+40"),
        Country(name: "ğŸ‡·ğŸ‡º", code: "+7"),
        Country(name: "ğŸ‡·ğŸ‡¼", code: "+250"),
        Country(name: "ğŸ‡¼ğŸ‡¸", code: "+685"),
        Country(name: "ğŸ‡¸ğŸ‡²", code: "+378"),
        Country(name: "ğŸ‡¸ğŸ‡¦", code: "+966"),
        Country(name: "ğŸ‡¸ğŸ‡³", code: "+221"),
        Country(name: "ğŸ‡·ğŸ‡¸", code: "+381"),
        Country(name: "ğŸ‡¸ğŸ‡¨", code: "+248"),
        Country(name: "ğŸ‡¸ğŸ‡±", code: "+232"),
        Country(name: "ğŸ‡¸ğŸ‡¬", code: "+65"),
        Country(name: "ğŸ‡¸ğŸ‡½", code: "+1"),
        Country(name: "ğŸ‡¸ğŸ‡°", code: "+421"),
        Country(name: "ğŸ‡¸ğŸ‡®", code: "+386"),
        Country(name: "ğŸ‡¬ğŸ‡¸", code: "+500"),
        Country(name: "ğŸ‡¸ğŸ‡§", code: "+677"),
        Country(name: "ğŸ‡¸ğŸ‡´", code: "+252"),
        Country(name: "ğŸ‡¿ğŸ‡¦", code: "+27"),
        Country(name: "ğŸ‡°ğŸ‡·", code: "+82"),
        Country(name: "ğŸ‡¸ğŸ‡¸", code: "+211"),
        Country(name: "ğŸ‡ªğŸ‡¸", code: "+34"),
        Country(name: "ğŸ‡±ğŸ‡°", code: "+94"),
        Country(name: "ğŸ‡¸ğŸ‡©", code: "+249"),
        Country(name: "ğŸ‡¸ğŸ‡·", code: "+597"),
        Country(name: "ğŸ‡¸ğŸ‡¿", code: "+268"),
        Country(name: "ğŸ‡¸ğŸ‡ª", code: "+46"),
        Country(name: "ğŸ‡¨ğŸ‡­", code: "+41"),
        Country(name: "ğŸ‡¸ğŸ‡¾", code: "+963"),
        Country(name: "ğŸ‡¹ğŸ‡¼", code: "+886"),
        Country(name: "ğŸ‡¹ğŸ‡¯", code: "+992"),
        Country(name: "ğŸ‡¹ğŸ‡¿", code: "+255"),
        Country(name: "ğŸ‡¹ğŸ‡­", code: "+66"),
        Country(name: "ğŸ‡¹ğŸ‡¬", code: "+228"),
        Country(name: "ğŸ‡¹ğŸ‡°", code: "+690"),
        Country(name: "ğŸ‡¹ğŸ‡´", code: "+676"),
        Country(name: "ğŸ‡¹ğŸ‡¹", code: "+1"),
        Country(name: "ğŸ‡¹ğŸ‡³", code: "+216"),
        Country(name: "ğŸ‡¹ğŸ‡·", code: "+90"),
        Country(name: "ğŸ‡¹ğŸ‡²", code: "+993"),
        Country(name: "ğŸ‡¹ğŸ‡¨", code: "+1"),
        Country(name: "ğŸ‡¹ğŸ‡»", code: "+688"),
        Country(name: "ğŸ‡»ğŸ‡®", code: "+1"),
        Country(name: "ğŸ‡ºğŸ‡¬", code: "+256"),
        Country(name: "ğŸ‡ºğŸ‡¦", code: "+380"),
        Country(name: "ğŸ‡¦ğŸ‡ª", code: "+971"),
        Country(name: "ğŸ‡¬ğŸ‡§", code: "+44"),
        Country(name: "ğŸ‡ºğŸ‡¸", code: "+1"),
        Country(name: "ğŸ‡ºğŸ‡¾", code: "+598"),
        Country(name: "ğŸ‡ºğŸ‡¿", code: "+998"),
        Country(name: "ğŸ‡»ğŸ‡º", code: "+678"),
        Country(name: "ğŸ‡»ğŸ‡¦", code: "+379"),
        Country(name: "ğŸ‡»ğŸ‡ª", code: "+58"),
        Country(name: "ğŸ‡»ğŸ‡³", code: "+84"),
        Country(name: "ğŸ‡¼ğŸ‡«", code: "+681"),
        Country(name: "ğŸ‡ªğŸ‡­", code: "+681"),
        Country(name: "ğŸ‡¾ğŸ‡ª", code: "+967"),
        Country(name: "ğŸ‡¿ğŸ‡²", code: "+260"),
        Country(name: "ğŸ‡¿ğŸ‡¼", code: "+263")
    ]
    
    @State private var selectedCountryIndex = 0
    @State var enteredDigits: [String] = []
    @State var shuffledDigits = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]
    
    var body: some View {
        VStack {
            Text("Entered Phone Number:")
                .font(Font(UIFont.medium_26))
            
            HStack {
                Text("Country Code: \(countries[selectedCountryIndex].code)")
                    .font(Font(UIFont.medium_22))
            }
            
            HStack {
                ForEach(enteredDigits.indices, id: \.self) { index in
                    RoundedRectangle(cornerRadius: 10)
                        .frame(width: 25, height: 25)
                        .overlay(Text(hiddenNumber(index)).foregroundColor(.white))
                }
            }
            
            Spacer()
            
            AddNumbersButtonsView(enteredDigits: $enteredDigits, shuffledDigits: $shuffledDigits)
            
            
            Picker("Select Country", selection: $selectedCountryIndex) {
                ForEach(0..<countries.count, id: \.self) { index in
                    Text(countries[index].name).tag(index)
                }
            }
            .pickerStyle(.wheel)
            .labelsHidden()
            .padding()
            
        }
    }
    
    func hiddenNumber(_ index: Int) -> String {
        if index < enteredDigits.count {
            return enteredDigits[index]
        } else {
            return ""
        }
    }
}

struct AddNumbersButtonsView: View {
    @Binding var enteredDigits: [String]
    @Binding var shuffledDigits: [String]
    
    var body: some View {
        VStack {
            ForEach(0..<3) { row in
                HStack {
                    ForEach(0..<3) { column in
                        Button(action: {
                            addDigit(shuffledDigits[row * 3 + column])
                        }) {
                            RoundedRectangle(cornerRadius: 10)
                                .frame(width: 80, height: 80)
                                .foregroundColor(Color.black)
                                .overlay(Text(shuffledDigits[row * 3 + column])
                                    .foregroundColor(Color.black))
                        }
                    }
                }
            }
        }
    }
    
    func addDigit(_ digit: String) {
        enteredDigits.append(digit)
        shuffledDigits.shuffle()
    }
}

struct PhoneNumberView_Previews: PreviewProvider {
    static var previews: some View {
        PhoneNumberView()
    }
}
